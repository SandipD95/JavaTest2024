<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite hostname="new-PC" failures="0" tests="22" name="Test.Democlass" time="213.848" errors="1" timestamp="2024-07-04T10:38:33 IST" skipped="20">
  <testcase classname="Test.Democlass" name="multipleWindowHandling" time="55.330"/>
  <system-out/>
  <testcase classname="Test.Democlass" name="dropdown" time="158.518">
    <error message="Cannot locate option with value: Red1
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: &#039;3.5.3&#039;, revision: &#039;a88d25fe6b&#039;, time: &#039;2017-08-29T12:42:44.417Z&#039;
System info: host: &#039;NEW-PC&#039;, ip: &#039;192.168.39.197&#039;, os.name: &#039;Windows 7&#039;, os.arch: &#039;amd64&#039;, os.version: &#039;6.1&#039;, java.version: &#039;17.0.4.1&#039;
Driver info: driver.version: unknown" type="org.openqa.selenium.NoSuchElementException">
      <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate option with value: Red1
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.5.3', revision: 'a88d25fe6b', time: '2017-08-29T12:42:44.417Z'
System info: host: 'NEW-PC', ip: '192.168.39.197', os.name: 'Windows 7', os.arch: 'amd64', os.version: '6.1', java.version: '17.0.4.1'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.Select.selectByValue(Select.java:209)
at Test.Democlass.dropdown(Democlass.java:379)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- dropdown -->
  <system-out/>
  <testcase classname="Test.Democlass" name="fileUpload">
    <skipped/>
  </testcase> <!-- fileUpload -->
  <system-out/>
  <testcase classname="Test.Democlass" name="a">
    <skipped/>
  </testcase> <!-- a -->
  <system-out/>
  <testcase classname="Test.Democlass" name="hideElement">
    <skipped/>
  </testcase> <!-- hideElement -->
  <system-out/>
  <testcase classname="Test.Democlass" name="menu">
    <skipped/>
  </testcase> <!-- menu -->
  <system-out/>
  <testcase classname="Test.Democlass" name="buttons">
    <skipped/>
  </testcase> <!-- buttons -->
  <system-out/>
  <testcase classname="Test.Democlass" name="iteratorTest">
    <skipped/>
  </testcase> <!-- iteratorTest -->
  <system-out/>
  <testcase classname="Test.Democlass" name="assertionTest">
    <skipped/>
  </testcase> <!-- assertionTest -->
  <system-out/>
  <testcase classname="Test.Democlass" name="windowHandle">
    <skipped/>
  </testcase> <!-- windowHandle -->
  <system-out/>
  <testcase classname="Test.Democlass" name="Popup_Demo">
    <skipped/>
  </testcase> <!-- Popup_Demo -->
  <system-out/>
  <testcase classname="Test.Democlass" name="freamHnadle">
    <skipped/>
  </testcase> <!-- freamHnadle -->
  <system-out/>
  <testcase classname="Test.Democlass" name="explicitWaitTest">
    <skipped/>
  </testcase> <!-- explicitWaitTest -->
  <system-out/>
  <testcase classname="Test.Democlass" name="buttonsClick">
    <skipped/>
  </testcase> <!-- buttonsClick -->
  <system-out/>
  <testcase classname="Test.Democlass" name="webElwmnt">
    <skipped/>
  </testcase> <!-- webElwmnt -->
  <system-out/>
  <testcase classname="Test.Democlass" name="checkbox">
    <skipped/>
  </testcase> <!-- checkbox -->
  <system-out/>
  <testcase classname="Test.Democlass" name="tooltips">
    <skipped/>
  </testcase> <!-- tooltips -->
  <system-out/>
  <testcase classname="Test.Democlass" name="texbox">
    <skipped/>
  </testcase> <!-- texbox -->
  <system-out/>
  <testcase classname="Test.Democlass" name="dynamic_properties">
    <skipped/>
  </testcase> <!-- dynamic_properties -->
  <system-out/>
  <testcase classname="Test.Democlass" name="tab">
    <skipped/>
  </testcase> <!-- tab -->
  <system-out/>
  <testcase classname="Test.Democlass" name="dataTable">
    <skipped/>
  </testcase> <!-- dataTable -->
  <system-out/>
  <testcase classname="Test.Democlass" name="dependsMethodTest">
    <skipped/>
  </testcase> <!-- dependsMethodTest -->
  <system-out/>
</testsuite> <!-- Test.Democlass -->
